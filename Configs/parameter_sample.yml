# Hyper-parameters for the referential games 

# Model: 
model: bart
bart: true
batch_size: 16
embedding_dim: 1024
hidden_dim: 512
image_dim: 2048
bidirectional: false # RNN-specific
num_layers: 1 #RNN-specific 
vocab_size: 4035 #RNN-specific
fix_bhd: false
fix_spk: false
no_share_bhd: false

# Train and eval: 
# train eval basic setting 
do_train: true # control whether we train
do_eval: true # whether to do eval after training 
seed: 42
n_gpu: 1
cpu: False
# training parameters
dropout: 0.1
grad_clip: 1.0
hard: true # Gumbel softmax sampling; we always prefer to set this true
seq_len: 15 # sequence length limit
temp: 1.0 # temperature for gumbel softmax
loss_type: xent
lr: 1.0e-05
# gaming logistics
num_games: 30 # Upper bound of the num of epochs
num_distractors_train: 255
num_distractors_valid: 127
valid_batch_size: 128
valid_every: 250
print_every: 50
TransferH: false #switch to hard gumbel after the model reaches target accuracy.

# Loading and saving data:
dataset: coco
coco_path: Data/coco_new
#coco_path: /gscratch/ark/xuhuizh/UMT_data/coco_new # Keep this for the conv
#of my local dev.
save_pretrain_seperately: true
output_dir: Output
results_save_path: Output

# Other unimportant parameters:
alpha: 1.0
beam_width: 12
decode_how: beam
no_terminal: false # This parameter isn't used anywhere
no_write: false 
norm_pow: 0.0 # for MT part, not relevant here.
sample_how: gumbel # we always use gumbel in our case

